package io.github.confuser2188.exploitguard.module.check;

import io.github.confuser2188.exploitguard.Main;
import io.github.confuser2188.exploitguard.module.Check;
import io.github.confuser2188.exploitguard.module.Module;
import io.github.confuser2188.packetlistener.FieldName;
import io.github.confuser2188.packetlistener.Reflection;
import io.github.confuser2188.packetlistener.event.ReceivedPacketEvent;
import io.github.confuser2188.packetlistener.minecraft.ItemStack;
import io.github.confuser2188.packetlistener.minecraft.NBTTagCompound;
import io.github.confuser2188.packetlistener.minecraft.NBTTagList;
import org.bukkit.event.EventHandler;

public class BookPlace extends Module{

    public BookPlace() {
        super(Check.BOOK_PLACE);
    }

    @EventHandler
    public void onPacketReceive(ReceivedPacketEvent event) {
        if (!this.isEnabled())
            return;

        String ver = Main.getServerVersion();
        if(ver.startsWith("v1_8"))
            if (event.getPacketName().equals("PacketPlayInBlockPlace"))
                try {
                    ItemStack itemStack = new ItemStack(Reflection.getFieldValue(event.getPacket(), FieldName.ITEMSTACK.getName()));

                    if (itemStack.getItemStack() != null && itemStack.getItem().getItem() != null && itemStack.getItem().getName() != null) {
                        String itemName = itemStack.getItem().getName();
                        if (itemName.equals("book")
                                || itemName.equals("writingBook")
                                || itemName.equals("writtenBook")) {
                            NBTTagCompound tagCompound = new NBTTagCompound(itemStack.getItemStack());
                            if (tagCompound.isValid() && tagCompound.hasKey("pages")) {
                                NBTTagList list = tagCompound.getList("pages", 8);
                                if (list.size() > 50)
                                {
                                    // TODO: Notification
                                    event.setCancelled(true);
                                }
                                else if (list.size() >= 1)
                                    for (int i = 0; i < list.size(); i++)
                                        if (list.getString(i).length() > 257) {
                                            // TODO: Notification
                                            event.setCancelled(true);
                                            break;
                                        }
                            }
                        }
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
    }
}
