package io.github.confuser2188.exploitguard.module.check;

import io.github.confuser2188.exploitguard.Action;
import io.github.confuser2188.exploitguard.module.Check;
import io.github.confuser2188.exploitguard.module.Module;
import io.github.confuser2188.packetlistener.FieldName;
import io.github.confuser2188.packetlistener.Reflection;
import io.github.confuser2188.packetlistener.event.ReceivedPacketEvent;
import io.github.confuser2188.packetlistener.minecraft.PayloadChannel;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;

import java.util.HashMap;

public class PayloadRegister extends Module{

    public PayloadRegister() {
        super(Check.PAYLOAD_REGISTER);
    }

    // player.getListeningPluginChannels().size() not working properly
    private HashMap<Player, Integer> channelSize = new HashMap<>();

    @EventHandler
    public void onPacketReceive(ReceivedPacketEvent event) {
        if(!this.isEnabled())
            return;

        if(event.getPacketName().equals("PacketPlayInCustomPayload"))
        {
            try
            {
                String channel = PayloadChannel.getChannel(event.getPacket());

                // Lower case channel name is for 1.13+
                if(channel.contains("register") || channel.contains("REGISTER"))
                {
                    addChannel(event.getPlayer());
                    if(channelSize.get(event.getPlayer()) > 127)
                        violation(event);
                }
            }catch(Exception ex) { ex.printStackTrace(); }
        }
    }

    private void addChannel(Player pl) {
        if(!channelSize.containsKey(pl))
            channelSize.put(pl, 1);
        else
            channelSize.put(pl, channelSize.get(pl) + 1);
    }
}
